<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.redcross.mapper.QuestionMapper">

    <!-- 查询所有题目 -->
    <select id="getAllQuestions" resultType="com.example.redcross.entity.Question">
        SELECT * FROM question
    </select>
    <!-- 根据题目类型查询题目 -->
    <select id="getQuestionsByType" resultType="com.example.redcross.entity.Question">
        SELECT * FROM question WHERE question_type = #{questionType}
    </select>
    <!-- 添加题目 -->
    <insert id="insertQuestion" useGeneratedKeys="true" keyProperty="questionId" keyColumn="question_id">
        INSERT INTO question (question_type, question, answer)
        VALUES (#{questionType}, #{question}, #{answer})
    </insert>
    <!-- 删除题目 -->
    <delete id="deleteQuestionById">
        DELETE FROM question WHERE question_id = #{questionId}
    </delete>
    <!-- 修改题目 -->
    <update id="updateQuestion">
        UPDATE question
        SET question_type = #{questionType},
            question = #{question},
            answer = #{answer}
        WHERE question_id = #{questionId}
    </update>
    <!-- 显示全部试卷类型 -->
    <select id="selectAllExam" resultType="com.example.redcross.entity.ExamType">
        SELECT * FROM examtype
    </select>
    <!-- 添加试卷类型 -->
    <insert id="insertExamType">
            INSERT INTO examtype (choice, truefalse, blank, score,time, current)
            VALUES (#{choice}, #{truefalse}, #{blank}, #{score}, #{time}, 0)
    </insert>
    <!-- 选择当前考试每种题型的题目数量 -->
    <update id="selectExam">
        UPDATE examtype
        SET current = CASE
                          WHEN examtype_id = #{examtypeId} THEN 1
                          ELSE 0
            END
    </update>
    <!-- 查询当前考试每种题型的题目数量 -->
    <select id="getExamType" resultType="com.example.redcross.entity.ExamType">
        SELECT * FROM examtype WHERE current = 1
    </select>
    <!--生成试卷，随机从题库中抽取题目，固定为选择题3道，判断题2道，填空题1道-->
    <select id="getExam" resultType="com.example.redcross.entity.Question">
            (SELECT question_id, question_type, question FROM question WHERE question_type = '1' ORDER BY RAND() LIMIT #{choice})
            UNION ALL
            (SELECT question_id, question_type, question FROM question WHERE question_type = '2' ORDER BY RAND() LIMIT #{truefalse})
            UNION ALL
            (SELECT question_id, question_type, question FROM question WHERE question_type = '3' ORDER BY RAND() LIMIT #{blank})
    </select>
    <!-- 将生成试卷的题目id和用户id存入试卷表中 -->
    <insert id="insertExam" >
        INSERT INTO exam ( question_ids , user_id ,exam_time)
        VALUES ( #{questionIds, jdbcType=VARCHAR} , #{userId} , NOW() )
    </insert>
    <!-- 根据用户id查询最新试卷，并获取试卷的题目question_ids -->
    <select id="findLatestExamByUserId" resultType="com.example.redcross.entity.Exam">
            SELECT * FROM exam WHERE user_id = #{userId} ORDER BY exam_id DESC LIMIT 1
    </select>
    <!-- 根据用户id查询全部试卷-->
    <select id="findAllExamByUserId" resultType= "com.example.redcross.entity.Exam" >
        SELECT * FROM exam WHERE user_id = #{userId} ORDER BY exam_id DESC
    </select>
    <!-- 将用户答案存入答案表中 -->
    <update id="insertUserAnswer">
        UPDATE exam
        SET answers = #{userAnswersJson, jdbcType=VARCHAR}
        WHERE exam_id = #{examId}
    </update>
    <!-- 根据question_ids查询题目 -->
    <select id="getQuestionsByIds" resultType="com.example.redcross.entity.Question">
        SELECT * FROM question WHERE question_id IN
        <foreach collection="questionIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        ORDER BY FIELD(question_id,
        <foreach collection="questionIds" item="id" separator=",">
            #{id}
        </foreach>
        )
    </select>
    <!-- 将分数插入到试卷表中 -->
    <update id="updateExamScore" >
        UPDATE exam
        SET score = #{score}
        WHERE exam_id = #{examId}
    </update>
    
    <!-- 查询所有考试成绩 -->
    <select id="getAllGrade" resultType="java.util.Map">
        SELECT e.exam_id, e.user_id, u.user_name, e.score, e.exam_time
        FROM exam e
        LEFT JOIN user u ON e.user_id = u.user_id
        WHERE e.score IS NOT NULL
        ORDER BY e.exam_time DESC
    </select>
    
    <!-- 查询最近50次考试成绩 -->
    <select id="getLastGrade" resultType="java.util.Map">
        SELECT e.exam_id, e.user_id, u.user_name, e.score, e.exam_time
        FROM exam e
        LEFT JOIN user u ON e.user_id = u.user_id
        WHERE e.score IS NOT NULL
        ORDER BY e.exam_time DESC
        LIMIT 10
    </select>
</mapper>